!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=83)}({83:function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function l(e){try{s(o.next(e))}catch(e){i(e)}}function a(e){try{s(o.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,a)}s((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.default=null;let r=new Map;self.addEventListener("notificationclick",e=>{if(e.notification.close(),"restart-timer"===e.action){const t=e.notification.tag,n=r.get(t);if(void 0===n)return void console.warn("Cannot find port for "+t);n.postMessage({restart:!0})}},!1),self.addEventListener("message",e=>{if(console.log("Handling message "+JSON.stringify(e,null,2)),e.data&&"INIT_PORT"===e.data.type){let t=e.data.fleetId;console.log("Register port for "+t),r.set(t,e.ports[0])}}),self.addEventListener("install",()=>o(void 0,void 0,void 0,(function*(){console.log("service_worker installing..."),yield self.skipWaiting(),console.log("Send message to client");const e=yield self.clients.matchAll();yield Promise.all(e.map(e=>e.postMessage({message:"Worker has been installed",code:"WORKER_INSTALLED"}))),console.log("Finished service_worker installing")})))}});
//# sourceMappingURL=service_worker.js.map